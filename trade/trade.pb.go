// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Hunsin/compass/trade/trade.proto

package trade

/*
Package trade defines the fields of data types which shared
between services.
*/

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A Daily represents the daily trading data of a Security on
// a specific date.
type Daily struct {
	Date  string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Open  float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High  float64 `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low   float64 `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close float64 `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	//  0: no trading record
	// -1: halted
	Volume               uint64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
	Avg                  float64  `protobuf:"fixed64,7,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Daily) Reset()         { *m = Daily{} }
func (m *Daily) String() string { return proto.CompactTextString(m) }
func (*Daily) ProtoMessage()    {}
func (*Daily) Descriptor() ([]byte, []int) {
	return fileDescriptor_trade_79d0a833d0611396, []int{0}
}
func (m *Daily) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Daily.Unmarshal(m, b)
}
func (m *Daily) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Daily.Marshal(b, m, deterministic)
}
func (dst *Daily) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Daily.Merge(dst, src)
}
func (m *Daily) XXX_Size() int {
	return xxx_messageInfo_Daily.Size(m)
}
func (m *Daily) XXX_DiscardUnknown() {
	xxx_messageInfo_Daily.DiscardUnknown(m)
}

var xxx_messageInfo_Daily proto.InternalMessageInfo

func (m *Daily) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Daily) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Daily) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Daily) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Daily) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Daily) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Daily) GetAvg() float64 {
	if m != nil {
		return m.Avg
	}
	return 0
}

// A Security represents a financial instrument in a Market.
type Security struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Isin                 string   `protobuf:"bytes,2,opt,name=isin,proto3" json:"isin,omitempty"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Listed               string   `protobuf:"bytes,6,opt,name=listed,proto3" json:"listed,omitempty"`
	Delisted             string   `protobuf:"bytes,7,opt,name=delisted,proto3" json:"delisted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Security) Reset()         { *m = Security{} }
func (m *Security) String() string { return proto.CompactTextString(m) }
func (*Security) ProtoMessage()    {}
func (*Security) Descriptor() ([]byte, []int) {
	return fileDescriptor_trade_79d0a833d0611396, []int{1}
}
func (m *Security) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Security.Unmarshal(m, b)
}
func (m *Security) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Security.Marshal(b, m, deterministic)
}
func (dst *Security) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Security.Merge(dst, src)
}
func (m *Security) XXX_Size() int {
	return xxx_messageInfo_Security.Size(m)
}
func (m *Security) XXX_DiscardUnknown() {
	xxx_messageInfo_Security.DiscardUnknown(m)
}

var xxx_messageInfo_Security proto.InternalMessageInfo

func (m *Security) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Security) GetIsin() string {
	if m != nil {
		return m.Isin
	}
	return ""
}

func (m *Security) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Security) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Security) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Security) GetListed() string {
	if m != nil {
		return m.Listed
	}
	return ""
}

func (m *Security) GetDelisted() string {
	if m != nil {
		return m.Delisted
	}
	return ""
}

// A Market represents an exchange where financial instruments
// are traded.
type Market struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Currency             string   `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Market) Reset()         { *m = Market{} }
func (m *Market) String() string { return proto.CompactTextString(m) }
func (*Market) ProtoMessage()    {}
func (*Market) Descriptor() ([]byte, []int) {
	return fileDescriptor_trade_79d0a833d0611396, []int{2}
}
func (m *Market) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Market.Unmarshal(m, b)
}
func (m *Market) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Market.Marshal(b, m, deterministic)
}
func (dst *Market) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Market.Merge(dst, src)
}
func (m *Market) XXX_Size() int {
	return xxx_messageInfo_Market.Size(m)
}
func (m *Market) XXX_DiscardUnknown() {
	xxx_messageInfo_Market.DiscardUnknown(m)
}

var xxx_messageInfo_Market proto.InternalMessageInfo

func (m *Market) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Market) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Market) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func init() {
	proto.RegisterType((*Daily)(nil), "trade.Daily")
	proto.RegisterType((*Security)(nil), "trade.Security")
	proto.RegisterType((*Market)(nil), "trade.Market")
}

func init() {
	proto.RegisterFile("github.com/Hunsin/compass/trade/trade.proto", fileDescriptor_trade_79d0a833d0611396)
}

var fileDescriptor_trade_79d0a833d0611396 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x41, 0x6a, 0x03, 0x21,
	0x14, 0x86, 0x31, 0xc9, 0x4c, 0xa2, 0xab, 0x22, 0xa5, 0x48, 0x56, 0x21, 0xab, 0x40, 0x21, 0x59,
	0xf4, 0x0a, 0x5d, 0x74, 0xd1, 0x6e, 0xec, 0x09, 0x8c, 0x23, 0x13, 0xa9, 0x8e, 0x83, 0x3a, 0x29,
	0x73, 0x90, 0x5e, 0xa2, 0xa7, 0x2c, 0xef, 0x29, 0x43, 0x37, 0xc3, 0xff, 0xfd, 0xfa, 0x78, 0x1f,
	0x23, 0x7b, 0xee, 0x6d, 0xbe, 0x4d, 0xd7, 0xb3, 0x0e, 0xfe, 0xf2, 0x36, 0x0d, 0xc9, 0x0e, 0x17,
	0x1d, 0xfc, 0xa8, 0x52, 0xba, 0xe4, 0xa8, 0x3a, 0x53, 0xbe, 0xe7, 0x31, 0x86, 0x1c, 0x78, 0x83,
	0x70, 0xfc, 0x21, 0xac, 0x79, 0x55, 0xd6, 0xcd, 0x9c, 0xb3, 0x4d, 0xa7, 0xb2, 0x11, 0xe4, 0x40,
	0x4e, 0x54, 0x62, 0x86, 0x2e, 0x8c, 0x66, 0x10, 0xab, 0x03, 0x39, 0x11, 0x89, 0x19, 0xba, 0x9b,
	0xed, 0x6f, 0x62, 0x5d, 0x3a, 0xc8, 0xfc, 0x81, 0xad, 0x5d, 0xf8, 0x16, 0x1b, 0xac, 0x20, 0xf2,
	0x47, 0xd6, 0x68, 0x17, 0x92, 0x11, 0x0d, 0x76, 0x05, 0xf8, 0x13, 0x6b, 0xef, 0xc1, 0x4d, 0xde,
	0x88, 0xf6, 0x40, 0x4e, 0x1b, 0x59, 0x09, 0xe6, 0xd5, 0xbd, 0x17, 0xdb, 0x32, 0xaf, 0xee, 0xfd,
	0xf1, 0x97, 0xb0, 0xdd, 0xa7, 0xd1, 0x53, 0xb4, 0x79, 0x86, 0x31, 0xaf, 0xe2, 0x97, 0xc9, 0x55,
	0xae, 0x12, 0xa8, 0xd8, 0x64, 0x8b, 0x1e, 0x95, 0x98, 0xe1, 0x6e, 0x9a, 0xfd, 0x35, 0x38, 0x14,
	0xa4, 0xb2, 0x12, 0xdc, 0x1d, 0x94, 0x37, 0xe8, 0x48, 0x25, 0x66, 0xe8, 0xf2, 0x3c, 0x16, 0x47,
	0x2a, 0x31, 0xc3, 0xbc, 0xb3, 0x29, 0x9b, 0x0e, 0x15, 0xa9, 0xac, 0xc4, 0xf7, 0x6c, 0xd7, 0x99,
	0x7a, 0xb2, 0xc5, 0x93, 0x85, 0x8f, 0xef, 0xac, 0xfd, 0x58, 0x8c, 0x74, 0xe8, 0x96, 0x9f, 0x08,
	0x79, 0xd9, 0xbc, 0xfa, 0xb7, 0x79, 0xcf, 0x76, 0x7a, 0x8a, 0xd1, 0x0c, 0x7a, 0xae, 0x9e, 0x0b,
	0x5f, 0x5b, 0x7c, 0xa0, 0x97, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x0b, 0x2f, 0x00, 0xcf,
	0x01, 0x00, 0x00,
}
